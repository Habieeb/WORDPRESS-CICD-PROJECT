name: Deploy WordPress to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          # Create the SSH key file
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          # Add the host to known_hosts to prevent host key verification issues
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

          # SSH into the EC2 instance and execute commands
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -vvv ubuntu@$EC2_HOST << 'EOF'
            # Pull the latest WordPress image from Docker Hub
            docker pull wordpress:latest

            # Pull the latest MySQL image from Docker Hub
            docker pull mysql:5.7

            # Navigate to the directory where your wordpress.yml file is located
            cd /path/to/your/docker-compose

            # Use docker-compose with the custom file name to pull the latest images and restart the containers
            docker-compose -f wordpress.yml pull
            docker-compose -f wordpress.yml up -d

            # Optional: Check the status of the containers
            docker-compose -f wordpress.yml ps
          EOF
